{
  "paragraphs": [
    {
      "title": "1 - Markdown",
      "text": "%md \n# Apache Zeppelin + Apache Spark + Apache Cassandra\n\nThis is a demonstration showing how to use [Apache Zeppelin notebook](https://zeppelin.incubator.apache.org/) to interact with [Apache Cassandra](http://cassandra.apache.org/) NoSQL database through [Apache Spark](http://spark.apache.org/) or directly through Cassandra CQL language.\n\n*Please note this is an unofficial demo and tutorial.*\n\n### Apache Spark\n\nApache Spark is a fast and general engine for big data processing, with built-in modules for streaming, SQL, machine learning and graph processing.\nMore details can be found here [http://spark.apache.org](http://spark.apache.org/).\nIt is  used for Cassandra data processing needs (ETL, transformations, analytics ...).\n\n### DataStax Spark Cassandra Connector\n\n[DataStax](http://www.datatstax.com) have developped a Spark Cassandra Connector to be able to read and write Cassandra data from Spark API. \nThe Spark Cassandra Connector lets you expose Cassandra tables as Spark RDDs (or DataFrames), write Spark RDDs (or DataFrames) to Cassandra tables, and execute arbitrary SQL queries from your Spark applications.\n\nUseful links:\n* [The Spark Cassandra Connector github repository](https://github.com/datastax/spark-cassandra-connector)\n* [Getting started with Apache Spark and Cassandra](https://academy.datastax.com/fr/demos/getting-started-apache-spark-and-cassandra)\n* [Free training on DataStax Enterprise Analytics with Apache Spark](https://academy.datastax.com/fr/courses/getting-started-apache-spark)\n\n### CQL Language\n\nThe Cassandra Query Language (CQL) is the primary language for communicating with the Cassandra database.\nDocumentation on CQL usage:\n* [Introduction to CQL](http://docs.datastax.com/en/cql/3.3/cql/cqlIntro.html)\n* [Using CQL](https://docs.datastax.com/en/cql/3.3/cql/cql_using/useAboutCQL.html)\n\nThe Cassandra CQL Interpreter for Apache Zeppelin is written by my colleague Duy Hai Doan  [@doanduyhai](https://twitter.com/doanduyhai)\n[CQL Interpreter documentation for Apache Zeppelin 0.5.5](https://zeppelin.incubator.apache.org/docs/0.5.5-incubating/interpreter/cassandra.html)\n\n\n",
      "dateUpdated": "Aug 29, 2016 3:00:18 PM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189171_-1676545337",
      "id": "20160113-181412_1813689583",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eApache Zeppelin + Apache Spark + Apache Cassandra\u003c/h1\u003e\n\u003cp\u003eThis is a demonstration showing how to use \u003ca href\u003d\"https://zeppelin.incubator.apache.org/\"\u003eApache Zeppelin notebook\u003c/a\u003e to interact with \u003ca href\u003d\"http://cassandra.apache.org/\"\u003eApache Cassandra\u003c/a\u003e NoSQL database through \u003ca href\u003d\"http://spark.apache.org/\"\u003eApache Spark\u003c/a\u003e or directly through Cassandra CQL language.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003ePlease note this is an unofficial demo and tutorial.\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eApache Spark\u003c/h3\u003e\n\u003cp\u003eApache Spark is a fast and general engine for big data processing, with built-in modules for streaming, SQL, machine learning and graph processing.\n\u003cbr  /\u003eMore details can be found here \u003ca href\u003d\"http://spark.apache.org/\"\u003ehttp://spark.apache.org\u003c/a\u003e.\n\u003cbr  /\u003eIt is  used for Cassandra data processing needs (ETL, transformations, analytics \u0026hellip;).\u003c/p\u003e\n\u003ch3\u003eDataStax Spark Cassandra Connector\u003c/h3\u003e\n\u003cp\u003e\u003ca href\u003d\"http://www.datatstax.com\"\u003eDataStax\u003c/a\u003e have developped a Spark Cassandra Connector to be able to read and write Cassandra data from Spark API.\n\u003cbr  /\u003eThe Spark Cassandra Connector lets you expose Cassandra tables as Spark RDDs (or DataFrames), write Spark RDDs (or DataFrames) to Cassandra tables, and execute arbitrary SQL queries from your Spark applications.\u003c/p\u003e\n\u003cp\u003eUseful links:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d\"https://github.com/datastax/spark-cassandra-connector\"\u003eThe Spark Cassandra Connector github repository\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d\"https://academy.datastax.com/fr/demos/getting-started-apache-spark-and-cassandra\"\u003eGetting started with Apache Spark and Cassandra\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d\"https://academy.datastax.com/fr/courses/getting-started-apache-spark\"\u003eFree training on DataStax Enterprise Analytics with Apache Spark\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCQL Language\u003c/h3\u003e\n\u003cp\u003eThe Cassandra Query Language (CQL) is the primary language for communicating with the Cassandra database.\n\u003cbr  /\u003eDocumentation on CQL usage:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d\"http://docs.datastax.com/en/cql/3.3/cql/cqlIntro.html\"\u003eIntroduction to CQL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d\"https://docs.datastax.com/en/cql/3.3/cql/cql_using/useAboutCQL.html\"\u003eUsing CQL\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe Cassandra CQL Interpreter for Apache Zeppelin is written by my colleague Duy Hai Doan  \u003ca href\u003d\"https://twitter.com/doanduyhai\"\u003e@doanduyhai\u003c/a\u003e\n\u003cbr  /\u003e\u003ca href\u003d\"https://zeppelin.incubator.apache.org/docs/0.5.5-incubating/interpreter/cassandra.html\"\u003eCQL Interpreter documentation for Apache Zeppelin 0.5.5\u003c/a\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:18 PM",
      "dateFinished": "Aug 29, 2016 3:00:18 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "2 - Shell command example",
      "text": "%sh pwd\nls -l",
      "dateUpdated": "Aug 29, 2016 3:00:18 PM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189171_-1676545337",
      "id": "20160113-181412_1623555306",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "/usr/zeppelin\ntotal 8656\n-rw-r--r--  1 root root 6851577 Aug 29 14:57 albums.csv\ndrwxr-xr-x  2 root root    4096 Aug 14 00:58 bin\ndrwxr-xr-x  2 1000 1000    4096 Aug 29 14:10 conf\ndrwxr-xr-x  2 root root    4096 Aug 29 14:14 data\ndrwxr-xr-x 11 root root    4096 Aug 14 01:04 interpreter\ndrwxr-xr-x  2 root root    4096 Aug 14 01:12 lib\n-rw-r--r--  1 root root   15569 Aug 14 00:58 LICENSE\ndrwxr-xr-x  2 root root    4096 Aug 14 00:58 licenses\ndrwxr-xr-x 10 root root    4096 Aug 29 14:53 local-repo\ndrwxr-xr-x  2 root root    4096 Aug 29 14:57 logs\ndrwxr-xr-x  5 root root    4096 Aug 29 14:16 notebook\n-rw-r--r--  1 root root     253 Aug 14 00:58 NOTICE\n-rw-r--r--  1 root root    9363 Aug 14 00:58 README.md\ndrwxr-xr-x  2 root root    4096 Aug 29 14:57 run\ndrwxr-xr-x  2 root root    4096 Aug 29 14:58 spark-warehouse\ndrwxr-xr-x  3 root root    4096 Aug 29 14:53 webapps\n-rw-r--r--  1 root root  105561 Aug 14 01:10 zeppelin-server-0.7.0-SNAPSHOT.jar\n-rw-r--r--  1 root root 1820360 Aug 14 01:10 zeppelin-web-0.7.0-SNAPSHOT.war\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:18 PM",
      "dateFinished": "Aug 29, 2016 3:00:19 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "3 - Add Spark library to read CSV files",
      "text": "%dep\n\nz.reset()\n\n// Add spark-csv package\n// Versions and documentation on https://github.com/databricks/spark-csv\nz.load(\"com.databricks:spark-csv_2.11:1.3.0\")",
      "dateUpdated": "Aug 29, 2016 3:00:18 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189171_-1676545337",
      "id": "20160113-181412_342563478",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "DepInterpreter(%dep) deprecated. Remove dependencies and repositories through GUI interpreter menu instead.\nDepInterpreter(%dep) deprecated. Load dependency through GUI interpreter menu instead.\nres0: org.apache.zeppelin.dep.Dependency \u003d org.apache.zeppelin.dep.Dependency@966adae\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:18 PM",
      "dateFinished": "Aug 29, 2016 3:00:43 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "4 - download demo CSV file",
      "text": "%sh\n\nwget https://raw.githubusercontent.com/victorcouste/zeppelin-spark-cassandra-demo/master/albums.csv\n\n# Or download direclty the demo CSV file from https://raw.githubusercontent.com/victorcouste/zeppelin-spark-cassandra-demo/master/albums.csv",
      "dateUpdated": "Aug 29, 2016 3:00:18 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189172_-1678469082",
      "id": "20160123-165554_1618215392",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "--2016-08-29 15:00:19--  https://raw.githubusercontent.com/victorcouste/zeppelin-spark-cassandra-demo/master/albums.csv\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.36.133\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.36.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 6851577 (6.5M) [text/plain]\nSaving to: ‘albums.csv.1’\n\n     0K .......... .......... .......... .......... ..........  0%  144M 0s\n    50K .......... .......... .......... .......... ..........  1% 2.35M 1s\n   100K .......... .......... .......... .......... ..........  2% 12.7M 1s\n   150K .......... .......... .......... .......... ..........  2%  158M 1s\n   200K .......... .......... .......... .......... ..........  3% 2.36M 1s\n   250K .......... .......... .......... .......... ..........  4% 13.3M 1s\n   300K .......... .......... .......... .......... ..........  5% 52.8M 1s\n   350K .......... .......... .......... .......... ..........  5%  296M 1s\n   400K .......... .......... .......... .......... ..........  6% 2.46M 1s\n   450K .......... .......... .......... .......... ..........  7% 42.4M 1s\n   500K .......... .......... .......... .......... ..........  8%  101M 1s\n   550K .......... .......... .......... .......... ..........  8% 22.2M 1s\n   600K .......... .......... .......... .......... ..........  9%  143M 1s\n   650K .......... .......... .......... .......... .......... 10%  101M 1s\n   700K .......... .......... .......... .......... .......... 11%  150M 1s\n   750K .......... .......... .......... .......... .......... 11% 97.3M 1s\n   800K .......... .......... .......... .......... .......... 12%  105M 1s\n   850K .......... .......... .......... .......... .......... 13% 2.60M 1s\n   900K .......... .......... .......... .......... .......... 14% 57.3M 1s\n   950K .......... .......... .......... .......... .......... 14%  150M 1s\n  1000K .......... .......... .......... .......... .......... 15% 96.3M 1s\n  1050K .......... .......... .......... .......... .......... 16%  134M 0s\n  1100K .......... .......... .......... .......... .......... 17%  107M 0s\n  1150K .......... .......... .......... .......... .......... 17% 34.7M 0s\n  1200K .......... .......... .......... .......... .......... 18%  103M 0s\n  1250K .......... .......... .......... .......... .......... 19%  122M 0s\n  1300K .......... .......... .......... .......... .......... 20%  110M 0s\n  1350K .......... .......... .......... .......... .......... 20% 99.1M 0s\n  1400K .......... .......... .......... .......... .......... 21%  140M 0s\n  1450K .......... .......... .......... .......... .......... 22% 95.5M 0s\n  1500K .......... .......... .......... .......... .......... 23%  156M 0s\n  1550K .......... .......... .......... .......... .......... 23% 92.8M 0s\n  1600K .......... .......... .......... .......... .......... 24%  105M 0s\n  1650K .......... .......... .......... .......... .......... 25% 98.0M 0s\n  1700K .......... .......... .......... .......... .......... 26%  150M 0s\n  1750K .......... .......... .......... .......... .......... 26% 3.07M 0s\n  1800K .......... .......... .......... .......... .......... 27% 75.8M 0s\n  1850K .......... .......... .......... .......... .......... 28% 99.2M 0s\n  1900K .......... .......... .......... .......... .......... 29%  155M 0s\n  1950K .......... .......... .......... .......... .......... 29% 97.4M 0s\n  2000K .......... .......... .......... .......... .......... 30%  107M 0s\n  2050K .......... .......... .......... .......... .......... 31% 96.3M 0s\n  2100K .......... .......... .......... .......... .......... 32%  151M 0s\n  2150K .......... .......... .......... .......... .......... 32% 98.0M 0s\n  2200K .......... .......... .......... .......... .......... 33%  140M 0s\n  2250K .......... .......... .......... .......... .......... 34% 97.9M 0s\n  2300K .......... .......... .......... .......... .......... 35%  137M 0s\n  2350K .......... .......... .......... .......... .......... 35%  107M 0s\n  2400K .......... .......... .......... .......... .......... 36% 76.6M 0s\n  2450K .......... .......... .......... .......... .......... 37%  150M 0s\n  2500K .......... .......... .......... .......... .......... 38%  125M 0s\n  2550K .......... .......... .......... .......... .......... 38% 97.4M 0s\n  2600K .......... .......... .......... .......... .......... 39%  142M 0s\n  2650K .......... .......... .......... .......... .......... 40%  101M 0s\n  2700K .......... .......... .......... .......... .......... 41%  129M 0s\n  2750K .......... .......... .......... .......... .......... 41%  109M 0s\n  2800K .......... .......... .......... .......... .......... 42% 94.7M 0s\n  2850K .......... .......... .......... .......... .......... 43%  109M 0s\n  2900K .......... .......... .......... .......... .......... 44% 99.0M 0s\n  2950K .......... .......... .......... .......... .......... 44%  150M 0s\n  3000K .......... .......... .......... .......... .......... 45% 94.8M 0s\n  3050K .......... .......... .......... .......... .......... 46%  150M 0s\n  3100K .......... .......... .......... .......... .......... 47%  101M 0s\n  3150K .......... .......... .......... .......... .......... 47%  131M 0s\n  3200K .......... .......... .......... .......... .......... 48% 81.9M 0s\n  3250K .......... .......... .......... .......... .......... 49%  149M 0s\n  3300K .......... .......... .......... .......... .......... 50%  101M 0s\n  3350K .......... .......... .......... .......... .......... 50% 98.4M 0s\n  3400K .......... .......... .......... .......... .......... 51%  145M 0s\n  3450K .......... .......... .......... .......... .......... 52% 96.4M 0s\n  3500K .......... .......... .......... .......... .......... 53%  154M 0s\n  3550K .......... .......... .......... .......... .......... 53% 5.33M 0s\n  3600K .......... .......... .......... .......... .......... 54% 75.8M 0s\n  3650K .......... .......... .......... .......... .......... 55% 99.5M 0s\n  3700K .......... .......... .......... .......... .......... 56%  143M 0s\n  3750K .......... .......... .......... .......... .......... 56% 98.4M 0s\n  3800K .......... .......... .......... .......... .......... 57%  101M 0s\n  3850K .......... .......... .......... .......... .......... 58%  149M 0s\n  3900K .......... .......... .......... .......... .......... 59% 97.5M 0s\n  3950K .......... .......... .......... .......... .......... 59%  147M 0s\n  4000K .......... .......... .......... .......... .......... 60% 73.4M 0s\n  4050K .......... .......... .......... .......... .......... 61%  159M 0s\n  4100K .......... .......... .......... .......... .......... 62% 97.7M 0s\n  4150K .......... .......... .......... .......... .......... 62%  119M 0s\n  4200K .......... .......... .......... .......... .......... 63% 48.7M 0s\n  4250K .......... .......... .......... .......... .......... 64%  370M 0s\n  4300K .......... .......... .......... .......... .......... 65%  387M 0s\n  4350K .......... .......... .......... .......... .......... 65% 95.7M 0s\n  4400K .......... .......... .......... .......... .......... 66%  116M 0s\n  4450K .......... .......... .......... .......... .......... 67%  100M 0s\n  4500K .......... .......... .......... .......... .......... 68%  139M 0s\n  4550K .......... .......... .......... .......... .......... 68%  103M 0s\n  4600K .......... .......... .......... .......... .......... 69%  131M 0s\n  4650K .......... .......... .......... .......... .......... 70%  108M 0s\n  4700K .......... .......... .......... .......... .......... 70%  136M 0s\n  4750K .......... .......... .......... .......... .......... 71%  106M 0s\n  4800K .......... .......... .......... .......... .......... 72% 95.2M 0s\n  4850K .......... .......... .......... .......... .......... 73%  107M 0s\n  4900K .......... .......... .......... .......... .......... 73%  100M 0s\n  4950K .......... .......... .......... .......... .......... 74%  149M 0s\n  5000K .......... .......... .......... .......... .......... 75% 97.0M 0s\n  5050K .......... .......... .......... .......... .......... 76%  148M 0s\n  5100K .......... .......... .......... .......... .......... 76% 98.9M 0s\n  5150K .......... .......... .......... .......... .......... 77%  136M 0s\n  5200K .......... .......... .......... .......... .......... 78% 78.2M 0s\n  5250K .......... .......... .......... .......... .......... 79% 93.9M 0s\n  5300K .......... .......... .......... .......... .......... 79% 96.9M 0s\n  5350K .......... .......... .......... .......... .......... 80% 96.0M 0s\n  5400K .......... .......... .......... .......... .......... 81%  105M 0s\n  5450K .......... .......... .......... .......... .......... 82%  271M 0s\n  5500K .......... .......... .......... .......... .......... 82%  174M 0s\n  5550K .......... .......... .......... .......... .......... 83% 87.2M 0s\n  5600K .......... .......... .......... .......... .......... 84%  102M 0s\n  5650K .......... .......... .......... .......... .......... 85%  115M 0s\n  5700K .......... .......... .......... .......... .......... 85%  113M 0s\n  5750K .......... .......... .......... .......... .......... 86%  126M 0s\n  5800K .......... .......... .......... .......... .......... 87% 84.9M 0s\n  5850K .......... .......... .......... .......... .......... 88%  126M 0s\n  5900K .......... .......... .......... .......... .......... 88%  134M 0s\n  5950K .......... .......... .......... .......... .......... 89%  147M 0s\n  6000K .......... .......... .......... .......... .......... 90% 73.1M 0s\n  6050K .......... .......... .......... .......... .......... 91% 68.3M 0s\n  6100K .......... .......... .......... .......... .......... 91%  147M 0s\n  6150K .......... .......... .......... .......... .......... 92% 97.2M 0s\n  6200K .......... .......... .......... .......... .......... 93% 98.5M 0s\n  6250K .......... .......... .......... .......... .......... 94%  150M 0s\n  6300K .......... .......... .......... .......... .......... 94% 97.8M 0s\n  6350K .......... .......... .......... .......... .......... 95%  153M 0s\n  6400K .......... .......... .......... .......... .......... 96% 75.9M 0s\n  6450K .......... .......... .......... .......... .......... 97%  143M 0s\n  6500K .......... .......... .......... .......... .......... 97% 99.8M 0s\n  6550K .......... .......... .......... .......... .......... 98%  151M 0s\n  6600K .......... .......... .......... .......... .......... 99% 92.4M 0s\n  6650K .......... .......... .......... ..........           100%  118M\u003d0.2s\n\n2016-08-29 15:00:20 (38.0 MB/s) - ‘albums.csv.1’ saved [6851577/6851577]\n\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:18 PM",
      "dateFinished": "Aug 29, 2016 3:00:20 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "4 - Spark :  load cSV File in dataFrame",
      "text": "%spark\n\n//Display Spark version used\nprintln(\"Spark version:\"+sc.version)\n\nval df_albums \u003d sqlContext.read\n.format(\"com.databricks.spark.csv\")\n.option(\"header\", \"true\")\n.load(\"albums.csv\")\n.cache\n\n//If you want to store albums.csv in a specific folder run\n//val df_albums \u003d sqlContext.read\n//.format(\"com.databricks.spark.csv\")\n//.option(\"header\", \"true\")\n//.load(\"/your_path/albums.csv\")\n//.cache",
      "dateUpdated": "Aug 29, 2016 3:00:18 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189172_-1678469082",
      "id": "20160113-181412_829518708",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "Spark version:2.0.0\n\ndf_albums: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [artist: string, album: string ... 4 more fields]\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:43 PM",
      "dateFinished": "Aug 29, 2016 3:00:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "5 - Spark : Print Schema, Show, Filter, GroupBy dataFrame",
      "text": "df_albums.printSchema()\ndf_albums.show()\ndf_albums.filter(\"year \u003e 2000\").show()\ndf_albums.groupBy(\"year\").count().show()",
      "dateUpdated": "Aug 29, 2016 3:00:18 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189172_-1678469082",
      "id": "20160114-180933_599744065",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "root\n |-- artist: string (nullable \u003d true)\n |-- album: string (nullable \u003d true)\n |-- year: string (nullable \u003d true)\n |-- country: string (nullable \u003d true)\n |-- quality: string (nullable \u003d true)\n |-- status: string (nullable \u003d true)\n\n+----------+--------------------+----+--------------+-------+--------+\n|    artist|               album|year|       country|quality|  status|\n+----------+--------------------+----+--------------+-------+--------+\n|Ultra Naté|Stranger Than Fic...|2001|           USA| normal|Official|\n|Ultra Naté|                Free|1997|   Netherlands| normal|Official|\n|Ultra Naté|          Is It Love|1992|           USA| normal|Official|\n|Ultra Naté|New Kind of Medicine|1998|United Kingdom| normal|Official|\n|Ultra Naté|                Free|1997|     Australia| normal|Official|\n|Ultra Naté|Free: The Mood II...|1997|       Denmark| normal|Official|\n|Ultra Naté|           Rejoicing|1991|           USA| normal|Official|\n|Ultra Naté|        Found a Cure|1998|United Kingdom| normal|Official|\n|Ultra Naté| Situation: Critical|1998|United Kingdom| normal|Official|\n|Ultra Naté|                Free|1998|  South Africa| normal|Official|\n|Ultra Naté|       Joy / Show Me|1993|           USA| normal|Official|\n|Ultra Naté|           Get It Up|2001|       Germany| normal|Official|\n|Ultra Naté|One Woman\u0027s Insanity|1993|           USA| normal|Official|\n|Ultra Naté|  Situation:Critical|1998|           USA| normal|Official|\n|Ultra Naté|              Desire|2000|       Germany| normal|Official|\n|Ultra Naté|New Kind of Medic...|1998|United Kingdom| normal|Official|\n|Ultra Naté|Blue Notes in the...|1991|           USA| normal|Official|\n|    Object|   The Ethane Asylum|2008|           USA| normal|Official|\n|    Object|  Part-Time Paranoia|2001|       Germany| normal|Official|\n|    Object| The Reflecting Skin|  -1|       Unknown| normal|Official|\n+----------+--------------------+----+--------------+-------+--------+\nonly showing top 20 rows\n\n+--------------------+--------------------+----+--------------+-------+--------+\n|              artist|               album|year|       country|quality|  status|\n+--------------------+--------------------+----+--------------+-------+--------+\n|          Ultra Naté|Stranger Than Fic...|2001|           USA| normal|Official|\n|          Ultra Naté|           Get It Up|2001|       Germany| normal|Official|\n|              Object|   The Ethane Asylum|2008|           USA| normal|Official|\n|              Object|  Part-Time Paranoia|2001|       Germany| normal|Official|\n|              Hayden|     In Field \u0026 Town|2008|        Canada| normal|Official|\n|              Hayden|   Elk-Lake Serenade|2004|        Canada| normal|Official|\n|              Hayden|            Us Alone|2013|           USA| normal|Official|\n|              Hayden|Skyscraper Nation...|2001|        Canada| normal|Official|\n|              Hayden|Live at Convocati...|2002|           USA| normal|Official|\n|              Hayden|            Hey Love|2015|        Canada| normal|Official|\n|              Hayden|The Place Where W...|2009|        Canada| normal|Official|\n|Get Cape. Wear Ca...|I-Spy / Call Me I...|2006|United Kingdom| normal|Official|\n|Get Cape. Wear Ca...|Get Cape. Wear Ca...|2005|United Kingdom| normal|Official|\n|Get Cape. Wear Ca...|       Find the Time|2008|United Kingdom| normal|Official|\n|Get Cape. Wear Ca...|   War of the Worlds|2006|United Kingdom| normal|Official|\n|Get Cape. Wear Ca...|Searching for the...|2008|United Kingdom| normal|Official|\n|Get Cape. Wear Ca...|Get Cape. Wear Ca...|2010|United Kingdom| normal|Official|\n|Get Cape. Wear Ca...|    Keep Singing Out|2008|United Kingdom| normal|Official|\n|Get Cape. Wear Ca...|                Maps|2012|United Kingdom| normal|Official|\n|Get Cape. Wear Ca...|The Chronicles of...|2006|United Kingdom| normal|Official|\n+--------------------+--------------------+----+--------------+-------+--------+\nonly showing top 20 rows\n\n+----+-----+\n|year|count|\n+----+-----+\n|1953|   34|\n|1957|  160|\n|1987| 1289|\n|1956|  134|\n|  -1| 5948|\n|1936|   11|\n|2012| 2121|\n| 200|    1|\n|1958|  152|\n|1943|    6|\n|1972|  496|\n|1931|    5|\n|1988| 1328|\n|1938|   11|\n|1926|    9|\n|1911|    1|\n|1918|    6|\n|1932|    2|\n|1977|  599|\n|2014| 1148|\n+----+-----+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:44 PM",
      "dateFinished": "Aug 29, 2016 3:01:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "6 - SparkSQL on DataFrame 1",
      "text": "df_albums.registerTempTable(\"spark_albums_table\")\n\nsqlContext.sql(\"SELECT * FROM spark_albums_table\").show",
      "dateUpdated": "Aug 29, 2016 3:00:18 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189172_-1678469082",
      "id": "20160114-002321_1001583714",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nwarning: there was one deprecation warning; re-run with -deprecation for details\n+----------+--------------------+----+--------------+-------+--------+\n|    artist|               album|year|       country|quality|  status|\n+----------+--------------------+----+--------------+-------+--------+\n|Ultra Naté|Stranger Than Fic...|2001|           USA| normal|Official|\n|Ultra Naté|                Free|1997|   Netherlands| normal|Official|\n|Ultra Naté|          Is It Love|1992|           USA| normal|Official|\n|Ultra Naté|New Kind of Medicine|1998|United Kingdom| normal|Official|\n|Ultra Naté|                Free|1997|     Australia| normal|Official|\n|Ultra Naté|Free: The Mood II...|1997|       Denmark| normal|Official|\n|Ultra Naté|           Rejoicing|1991|           USA| normal|Official|\n|Ultra Naté|        Found a Cure|1998|United Kingdom| normal|Official|\n|Ultra Naté| Situation: Critical|1998|United Kingdom| normal|Official|\n|Ultra Naté|                Free|1998|  South Africa| normal|Official|\n|Ultra Naté|       Joy / Show Me|1993|           USA| normal|Official|\n|Ultra Naté|           Get It Up|2001|       Germany| normal|Official|\n|Ultra Naté|One Woman\u0027s Insanity|1993|           USA| normal|Official|\n|Ultra Naté|  Situation:Critical|1998|           USA| normal|Official|\n|Ultra Naté|              Desire|2000|       Germany| normal|Official|\n|Ultra Naté|New Kind of Medic...|1998|United Kingdom| normal|Official|\n|Ultra Naté|Blue Notes in the...|1991|           USA| normal|Official|\n|    Object|   The Ethane Asylum|2008|           USA| normal|Official|\n|    Object|  Part-Time Paranoia|2001|       Germany| normal|Official|\n|    Object| The Reflecting Skin|  -1|       Unknown| normal|Official|\n+----------+--------------------+----+--------------+-------+--------+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:59 PM",
      "dateFinished": "Aug 29, 2016 3:01:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "7 - SparkSQL On DataFrame  2",
      "text": "%sql\nSELECT country,count(*) as nb FROM spark_albums_table group by country",
      "dateUpdated": "Aug 29, 2016 3:00:18 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": false,
        "helium": {},
        "title": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "country",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "nb",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "nb",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189172_-1678469082",
      "id": "20160114-002054_842505952",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "country\tnb\nSweden\t2323\nPhilippines\t8\nSingapore\t18\nMalaysia\t4\nTurkey\t617\nGermany\t9801\nJordan\t1\nFrance\t3462\nGreece\t132\nTaiwan\t159\nSlovakia\t71\nReunion\t1\nArgentina\t525\nBelgium\t763\nEcuador\t4\nFinland\t1970\nPeru\t15\nBenin\t1\nIndia\t87\nChina\t47\nBelarus\t1\nMalta\t1\nChile\t151\nPuerto Rico\t18\nCroatia\t51\nBolivia\t1\nNigeria\t2\nVirgin Islands\t6\nAndorra\t3\nGabon\t1\nUnknown\t14740\nItaly\t1637\nLithuania\t49\nNorway\t898\nSpain\t1352\nCuba\t10\nDenmark\t346\nBarbados\t3\nRussian Federation\t751\nIreland\t109\nLiechtenstein\t2\nThailand\t5\nMonaco\t1\nHong Kong\t59\nUkraine\t49\nVenezuela\t22\nIsrael\t94\nIceland\t66\nSaint-Barthelemy\t1\nUSA\t36217\nSouth Korea\t101\nCyprus\t1\nUruguay\t22\nMexico\t266\nAruba\t1\nEstonia\t207\nIndonesia\t5\nGuatemala\t2\nArmenia\t3\nSyria\t1\nTrinidad and Tobago\t1\nSaudi Arabia\t2\nSwitzerland\t209\nEthiopia\t1\nJamaica\t234\nLatvia\t42\nUnited Arab Emirates\t6\nCanada\t1813\nFaroe Islands\t4\nCzech Republic\t190\nBrazil\t889\nLebanon\t13\nSlovenia\t46\nDominican Republic\t1\nJapan\t6042\nLuxembourg\t10\nNew Zealand\t160\nUnited States Minor Outlying Islands\t4\nBosnia and Herzegovina\t6\nPoland\t1122\nPortugal\t217\nAustralia\t1556\nRomania\t97\nBulgaria\t34\nAustria\t318\nCosta Rica\t2\nEgypt\t6\nSerbia\t17\nSouth Africa\t48\nColombia\t32\nHungary\t55\nPakistan\t1\nUnited Kingdom\t20986\nMoldova\t2\nNetherlands\t1405\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:01:02 PM",
      "dateFinished": "Aug 29, 2016 3:01:03 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "8 - Cassandra CQL : Create keyspace, help and describe keyspaces",
      "text": "%cassandra\n\nCREATE KEYSPACE IF NOT EXISTS ks_music \nWITH replication \u003d {\n\t\u0027class\u0027 : \u0027SimpleStrategy\u0027,\n\t\u0027replication_factor\u0027 : 1\n};\n\n//help;\n\n//describe keyspaces;\n\n//describe keyspace ks_music;",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189172_-1678469082",
      "id": "20160119-181849_56311459",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Prefix not found."
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:19 PM",
      "dateFinished": "Aug 29, 2016 3:00:19 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "9 - Cassandra CQL : Tables creation",
      "text": "%cassandra\n\nuse ks_music;\n\nDROP TABLE albums;\n\nCREATE TABLE IF NOT EXISTS albums ( \n\tartist text,\n\talbum text,\n\tyear text,\n\tcountry text,\n\tquality text,\n\tstatus text,\n\tPRIMARY KEY (album) \n);\n\nDROP TABLE nbalbums_by_year;\n\nCREATE TABLE IF NOT EXISTS nbalbums_by_year ( \n\tyear text,\n    nbalbums int,\n\tPRIMARY KEY (year)\n);\n\ndescribe table albums;",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189172_-1678469082",
      "id": "20160113-181412_1134300065",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Prefix not found."
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:19 PM",
      "dateFinished": "Aug 29, 2016 3:00:19 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "10 - Cassandra CQL",
      "text": "%cassandra\nselect * from ks_music.albums limit 10;",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189173_-1678853831",
      "id": "20160123-172739_1656103366",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Prefix not found."
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:19 PM",
      "dateFinished": "Aug 29, 2016 3:00:19 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "11 - Write Spark DataFrame in Cassandra 1",
      "text": "df_albums.write\n.format(\"org.apache.spark.sql.cassandra\")\n.option(\"header\",\"false\")\n.mode(\"append\")\n.options(Map( \"table\" -\u003e \"albums\", \"keyspace\" -\u003e \"ks_music\"))\n.save()",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189173_-1678853831",
      "id": "20160114-001131_987960956",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:01:03 PM",
      "dateFinished": "Aug 29, 2016 3:01:40 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "12 - CQL Cassandra query",
      "text": "%cassandra\nselect * from ks_music.albums limit 10;",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "album",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "artist",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "album",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "artist",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189173_-1678853831",
      "id": "20160123-172148_256698728",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Prefix not found."
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:19 PM",
      "dateFinished": "Aug 29, 2016 3:00:19 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "13 - Write Spark DataFrame In Cassandra 2",
      "text": "\nval df_nbalbyms_by_year \u003d sqlContext.sql(\"SELECT year,count(*) as nbalbums FROM spark_albums_table group by year\")\n\ndf_nbalbyms_by_year.show\n\ndf_nbalbyms_by_year.write\n.format(\"org.apache.spark.sql.cassandra\")\n.option(\"header\",\"false\")\n.mode(\"overwrite\")\n.options(Map( \"table\" -\u003e \"nbalbums_by_year\", \"keyspace\" -\u003e \"ks_music\"))\n.save()",
      "dateUpdated": "Aug 29, 2016 3:01:57 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189173_-1678853831",
      "id": "20160114-000651_1120689629",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ndf_nbalbyms_by_year: org.apache.spark.sql.DataFrame \u003d [year: string, nbalbums: bigint]\n+----+--------+\n|year|nbalbums|\n+----+--------+\n|1953|      34|\n|1957|     160|\n|1987|    1289|\n|1956|     134|\n|  -1|    5948|\n|1936|      11|\n|2012|    2121|\n| 200|       1|\n|1958|     152|\n|1943|       6|\n|1972|     496|\n|1931|       5|\n|1988|    1328|\n|1938|      11|\n|1926|       9|\n|1911|       1|\n|1918|       6|\n|1932|       2|\n|1977|     599|\n|2014|    1148|\n+----+--------+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:01:57 PM",
      "dateFinished": "Aug 29, 2016 3:01:59 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "14 - Cassandra CQL query",
      "text": "%cassandra\nselect * from ks_music.nbalbums_by_year;",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "year",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "nbalbums",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "year",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189173_-1678853831",
      "id": "20160114-001159_1878746586",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Prefix not found."
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:00:19 PM",
      "dateFinished": "Aug 29, 2016 3:00:19 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "15 - Spark DataFrame from Cassandra Table",
      "text": "val df_albums_cassandra \u003d sqlContext\n  .read\n  .format(\"org.apache.spark.sql.cassandra\")\n  .options(Map( \"table\" -\u003e \"albums\", \"keyspace\" -\u003e \"ks_music\" ))\n  .load()\n  \ndf_albums_cassandra.show\n",
      "dateUpdated": "Aug 29, 2016 3:02:09 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189173_-1678853831",
      "id": "20160113-182535_1195558506",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ndf_albums_cassandra: org.apache.spark.sql.DataFrame \u003d [album: string, artist: string ... 4 more fields]\n+--------------------+--------------------+--------------+-------+--------------+----+\n|               album|              artist|       country|quality|        status|year|\n+--------------------+--------------------+--------------+-------+--------------+----+\n|Quit My Baby / Be...|           B.B. King|           USA| normal|      Official|1957|\n|              今でもずっと|                伊藤由奈|         Japan| normal|      Official|2009|\n|The Impossible Dr...|Carter the Unstop...|United Kingdom| normal|      Official|1992|\n|     The Way You Are|     Tears for Fears|United Kingdom| normal|      Official|1983|\n|           Primitive|             Soulfly|        Poland| normal|      Official|2000|\n|             Fàntèxī|                 周杰倫|        Taiwan| normal|Pseudo-Release|2001|\n|Destroying the Ma...|              Phobia|       Unknown| normal|      Official|  -1|\n|In the Mouth of t...|  Bullets and Octane|           USA| normal|      Official|2006|\n|Look Around the C...|       Alice Russell|           USA| normal|      Official|2012|\n|View From the Ground|             America|           USA| normal|      Official|1982|\n|      Serious Charge|       Cliff Richard|United Kingdom| normal|      Official|1959|\n|     19 Love Ballads|Michael Learns to...|       Denmark| normal|      Official|2002|\n|Hype City Soundtrack|  Neutral Milk Hotel|           USA| normal|      Official|1993|\n|         Sheryl Crow|         Sheryl Crow|       Unknown| normal|      Official|1996|\n|       No Boundaries|         Eva Cassidy|           USA| normal|      Official|2000|\n|            WHATEVER|               林原めぐみ|         Japan| normal|      Official|1992|\n|Dub Will Tear Us ...|        Jah Division|           USA| normal|      Official|2004|\n| Live at Minneapolis|        Alter Bridge|           USA| normal|      Official|2005|\n|The Twelfth of Ne...|       Cliff Richard|United Kingdom| normal|      Official|1964|\n|                 Lyn|                4LYN|       Germany| normal|      Official|2001|\n+--------------------+--------------------+--------------+-------+--------------+----+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:02:09 PM",
      "dateFinished": "Aug 29, 2016 3:02:10 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "16 - SparkSQL table from Cassandra table",
      "text": "%sql\nCREATE TEMPORARY TABLE table_albums\nUSING org.apache.spark.sql.cassandra\nOPTIONS ( cluster \"Test Cluster\", keyspace \"ks_music\", table \"albums\", pushdown \"true\")",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "null",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "null",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189173_-1678853831",
      "id": "20160114-002507_1756327366",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:01:43 PM",
      "dateFinished": "Aug 29, 2016 3:01:44 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "17 - SparkSQL query on Cassandra Data",
      "text": "%sql\nselect country, count(*) as count from table_albums group by country having count\u003e${albumCountThreshold\u003d1000} order by count",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 196.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "country",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "nb",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "country",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "nb",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {
          "albumCountThreshold": "1500"
        },
        "forms": {
          "albumCountThreshold": {
            "name": "albumCountThreshold",
            "defaultValue": "1000",
            "hidden": false
          }
        }
      },
      "apps": [],
      "jobName": "paragraph_1472480189173_-1678853831",
      "id": "20160114-181331_1246292720",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "country\tcount\nItaly\t1502\nCanada\t1574\nFinland\t1807\nSweden\t2075\nFrance\t3025\nJapan\t5504\nGermany\t8520\nUnknown\t12876\nUnited Kingdom\t17926\nUSA\t31755\n"
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:01:44 PM",
      "dateFinished": "Aug 29, 2016 3:01:49 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Aug 29, 2016 3:00:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472480189174_-1677699584",
      "id": "20160114-093455_823181330",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Aug 29, 2016 2:16:29 AM",
      "dateStarted": "Aug 29, 2016 3:01:45 PM",
      "dateFinished": "Aug 29, 2016 3:01:49 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Demo_Zeppelin_Spark_Cassandra",
  "id": "2BW2GD6NP",
  "lastReplName": {
    "value": "sql"
  },
  "angularObjects": {
    "2BW92AJ26:shared_process": [],
    "2BUE7YEUC:shared_process": [],
    "2BWYTCJZC:shared_process": [],
    "2BX6TPWNA:shared_process": [],
    "2BVS7W5AE:shared_process": [],
    "2BV15NK82:shared_process": [],
    "2BUVCFMWC:shared_process": [],
    "2BX44T9KJ:shared_process": [],
    "2BUQNY71C:shared_process": []
  },
  "config": {},
  "info": {}
}